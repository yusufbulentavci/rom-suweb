--@DEPENDS:.base,testing

--@TABLE ver=1 uzanti=nfs
create table ortak.nufus(
	nufusid serial primary key,
	tckn text not null,
	isim text not null,
	soyisim text not null,
	dogum_tarihi date not null,
	baba text,
	foto bytea
  );
--@END

--@FUNCTION ver=1 roles=ogrenci_isleri
create function ortak.nufus_new(p_tckn text, p_isim text, p_soyisim text, p_dogum_tarihi date, p_baba text) returns ortak.nufus as $$
declare
	v_ret ortak.nufus;
begin
	insert into ortak.nufus(tckn, isim, soyisim, dogum_tarihi, baba) 
		values (p_tckn, p_isim, p_soyisim, p_dogum_tarihi, p_baba) returning * into v_ret;
	return v_ret;
end;
$$ language 'plpgsql';
--@END

--@FUNCTION ver=1 roles=ogrenci_isleri
create function ortak.nufus_list(p_tckn text, p_isim text, p_soyisim text) returns setof ortak.nufus as $$
begin
	return query
		select * 
			from ortak.nufus
			where
				(p_tckn is null or p_tckn=tckn)
				and (p_isim is null or p_isim=isim)
				and (p_soyisim is null or p_soyisim=soyisim)
			limit 200;

end;
$$ language 'plpgsql';
--@END

--@FUNCTION ver=1 roles=ogrenci_isleri
create function ortak.nufus_update(a_nufusid int, p_tckn text, p_isim text, p_soyisim text, p_baba text, p_foto bytea) returns ortak.nufus as $$
declare
	v_ret ortak.nufus;
begin
	update ortak.nufus
		set
			tckn=coalesce(p_tckn,tckn),
			isim=coalesce(p_isim,isim),
			soyisim=coalesce(p_soyisim, soyisim),
			baba=coalesce(p_baba,baba),
			foto=coalesce(p_foto,foto)
		where
			nufusid=a_nufusid
		returning * into v_ret;
	return v_ret;
end;
$$ language 'plpgsql';
--@END

--@FUNCTION ver=1 roles=ogrenci_isleri
create function ortak.nufus_delete(a_nufusid int) returns ortak.nufus as $$
declare
	v_ret ortak.nufus;
begin
	delete 
		from ortak.nufus
		where
			nufusid=a_nufusid
		returning * into v_ret;
	return v_ret;
end;
$$ language 'plpgsql';
--@END

--@RUN utest
select check_not_null((ortak.nufus_new('tckn1','ali', 'soyali', '15-12-1974'::date, 'alininbaba')).nufusid);
select check_not_null((ortak.nufus_new('tckn2','ali2', 'soyali', '13-12-1974'::date, 'alininbaba2')).nufusid);
select assert_equals(2, (select count(*)  from ortak.nufus_list(null,null,'soyali')));
select assert_equals(2, (select count(*)  from ortak.nufus_list(null,null,null)));
select assert_equals(0, (select count(*)  from ortak.nufus_list(null,null,'soyali4')));

select check_not_null((ortak.nufus_update(1, 'tckn3',null,null, null, null)).nufusid);

select check_not_null(ortak.nufus_delete(1));
select assert_equals(1, (select count(*)  from ortak.nufus_list(null,null,null)));

--@END