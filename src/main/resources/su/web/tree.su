--@DEPENDS:.base,.alan

--@TABLE uzanti=tri
create table web.tree(
	code ltree primary key,
	val jsonb not null,
	ord int not null default 100
  );
--@END

--@FUNCTION 
create function web.tree_new(p_code text, p_val jsonb, p_order int) returns text
language 'sql'
as $$
	insert into web.tree (code,val,ord) values (p_code::ltree,p_val,p_order) returning code::text;
$$;
--@END

--@FUNCTION 
create function web.tree_new_wlng(p_code text, p_lng text, p_val text, p_order int) returns text
language 'sql'
as $$
	insert into web.tree (code,val,ord) values (p_code::ltree, jsonb_build_object(p_lng,p_val), p_order) returning code::text;
$$;
--@END


--@FUNCTION ver=3
create function web.tree_list(p_code text, p_lng text default 'uz') returns jsonb
language 'sql'
as $$
	select jsonb_agg(k)
		from (
			select code::text as key, (val->>(coalesce(p_lng,'uz'))) as val
				from web.tree 
				where code ~ (p_code||'.*')::lquery
				order by ord) k;
$$;
--@UPGRADE: 1 drop function web.tree_list(text, text);
--@END

--@FUNCTION 
create function web.tree_get(a_id text, p_lng text default 'uz') returns text
language 'sql'
as $$
	select val->>(coalesce(p_lng,'uz'))
				from web.tree 
				where code = a_id::ltree;
$$;
--@END

--@FUNCTION norom
create function web.tree_get_in(a_id ltree, p_lng text default 'uz') returns text
language 'sql'
as $$
	select val->>(coalesce(p_lng,'uz'))
				from web.tree 
				where code = a_id;
$$;
--@END

