--@DEPENDS:.base,.prosedur,testing



--@TABLE uzanti=int
create table web.interaction(
	interaction_id bigserial primary key,
	user_id int not null,
	prosedur_id bigint references web.prosedur(prosedur_id) not null,
	cmd text not null,
	creation_time timestamp not null default now(),
	expire_time timestamp,
	success_if_expire boolean not null default false,
	accomplished timestamp,
	token text,
	subject text,
	body text,
	params jsonb,
	initial jsonb,
	vals jsonb,
	result boolean
  );
--@END


--@FUNCTION norom
create function web.interaction_new(a_user_id int, p_prosedur_id bigint, p_cmd text, p_valid_for interval, 
	p_subject text, p_body text, p_params jsonb, p_default jsonb default null, p_success_if_expire boolean default false) returns int
language 'plpgsql'
as $$
	declare
		v_ret bigint;
	begin
	insert into web.interaction (user_id, prosedur_id, cmd, 
			expire_time, 
			subject, body, params, vals, success_if_expire) 
		values (a_user_id, p_prosedur_id, p_cmd, 
			(case when p_valid_for is not null then now()+p_valid_for else null end),
			p_subject, p_body, p_params, p_default, p_success_if_expire)
		returning interaction_id into v_ret;
	return v_ret;
	end;
$$;
--@END

--@FUNCTION ver=3
create function web.interaction_complete(a_user_id int, a_id bigint, p_values jsonb) returns bigint
language 'plpgsql'
as $$
	declare
		v_int web.interaction;
		v_proc web.prosedur;
		v_exec text;
	begin
	
		update web.interaction 
			set vals=p_values
			where interaction_id=a_id
			returning * into strict v_int;
			
		select * into strict v_proc
			from web.prosedur
			where prosedur_id=v_int.prosedur_id;
	
--	v_exec:=format('perform web.prosedur_%s(a_user_id=>%s,p_cmd=>''next'',a_id=>%s,p_interaction=>%s);', v_proc.prosedur_code, a_user_id, v_proc.prosedur_id, a_id);

	v_exec:='select web.prosedur_'
		|| v_proc.prosedur_code 
		||'(a_user_id=>'
		||a_user_id
		||',p_cmd=>''next'',a_id=>'
		||v_proc.prosedur_id
		||',p_interaction=>'
		||a_id
		||');';


	raise notice '->%',v_exec;

	execute v_exec;
	
	delete from web.interaction where interaction_id=a_id;
	delete from web.prosedur where current_step='completed';
	
	return 0;
	end;
$$;
--@END


--@FUNCTION 
create function web.interaction_cancel(a_user_id int, a_id bigint) returns bigint
language 'plpgsql'
as $$
	declare
		v_proc_id bigint;
	begin
	
	delete from web.interaction where interaction_id=a_id returning prosedur_id into v_proc_id;
	delete from web.prosedur where prosedur_id=v_proc_id;
	
	return 0;
	end;
$$;
--@END


--@FUNCTION
create function web.interaction_list(a_user_id int) returns jsonb
language 'sql'
as $$
		select jsonb_agg(to_jsonb(t)) 
			from web.interaction t
			where user_id=a_user_id
				and result is null;
$$;
--@END

